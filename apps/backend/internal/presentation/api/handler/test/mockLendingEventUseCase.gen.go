// Code generated by MockGen. DO NOT EDIT.
// Source: internal/presentation/api/handler/lendingEvent.go
//
// Generated by this command:
//
//	mockgen -source=internal/presentation/api/handler/lendingEvent.go -destination=internal/presentation/api/handler/test/mockLendingEventUseCase.gen.go -package=handler_test
//

// Package handler_test is a generated GoMock package.
package handler_test

import (
	reflect "reflect"

	handler "github.com/haebeal/datti/internal/presentation/api/handler"
	gomock "go.uber.org/mock/gomock"
)

// MockLendingEventUseCase is a mock of LendingEventUseCase interface.
type MockLendingEventUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockLendingEventUseCaseMockRecorder
	isgomock struct{}
}

// MockLendingEventUseCaseMockRecorder is the mock recorder for MockLendingEventUseCase.
type MockLendingEventUseCaseMockRecorder struct {
	mock *MockLendingEventUseCase
}

// NewMockLendingEventUseCase creates a new mock instance.
func NewMockLendingEventUseCase(ctrl *gomock.Controller) *MockLendingEventUseCase {
	mock := &MockLendingEventUseCase{ctrl: ctrl}
	mock.recorder = &MockLendingEventUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLendingEventUseCase) EXPECT() *MockLendingEventUseCaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockLendingEventUseCase) Create(arg0 handler.CreateInput) (handler.CreateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(handler.CreateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockLendingEventUseCaseMockRecorder) Create(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockLendingEventUseCase)(nil).Create), arg0)
}
