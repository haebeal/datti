// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/lendingEvent.go
//
// Generated by this command:
//
//	mockgen -source=internal/domain/lendingEvent.go -destination=internal/usecase/test/mockLendingEventRepository.gen.go -package=usecase_test
//

// Package usecase_test is a generated GoMock package.
package usecase_test

import (
	reflect "reflect"

	domain "github.com/haebeal/datti/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockLendingEventRepository is a mock of LendingEventRepository interface.
type MockLendingEventRepository struct {
	ctrl     *gomock.Controller
	recorder *MockLendingEventRepositoryMockRecorder
	isgomock struct{}
}

// MockLendingEventRepositoryMockRecorder is the mock recorder for MockLendingEventRepository.
type MockLendingEventRepositoryMockRecorder struct {
	mock *MockLendingEventRepository
}

// NewMockLendingEventRepository creates a new mock instance.
func NewMockLendingEventRepository(ctrl *gomock.Controller) *MockLendingEventRepository {
	mock := &MockLendingEventRepository{ctrl: ctrl}
	mock.recorder = &MockLendingEventRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLendingEventRepository) EXPECT() *MockLendingEventRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockLendingEventRepository) Create(e *domain.LendingEvent) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", e)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockLendingEventRepositoryMockRecorder) Create(e any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockLendingEventRepository)(nil).Create), e)
}
